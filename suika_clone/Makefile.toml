[tasks.default]
clear = true
command = "echo"
args = [
    "\n",
    "************************\n",
    "USAGE:\n",
    " build: Build the project.\n",
    " run: Run the windows-exe file after building it.\n",
    "************************\n",
]


[tasks.prepare-to-build]
run_task = { name = ["copy-src", "copy-assets"] }

[tasks.prepare-directories-src]
command = "mkdir"
args = ["-p", "${CARGO_MAKE_WORKING_DIRECTORY}/src/embedded_assets/fonts"]

[tasks.prepare-directories-assets]
command = "mkdir"
args = ["-p", "${CARGO_MAKE_WORKING_DIRECTORY}/assets/fonts"]

[tasks.copy-src]
command = "cp"
args = ["--update",
    "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/external/GL-CurulMinamoto/fonts/ttf/GL-CurulMinamoto.ttf",
    "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/external/x12y12pxMaruMinyaM/x12y12pxMaruMinyaM.ttf",
    "${CARGO_MAKE_WORKING_DIRECTORY}/src/embedded_assets/fonts/",
]
dependencies = ["prepare-directories-src"]

[tasks.copy-assets]
command = "cp"
args = ["--update",
    "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/external/GL-CurulMinamoto/fonts/ttf/GL-CurulMinamoto.ttf",
    "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/external/x12y12pxMaruMinyaM/x12y12pxMaruMinyaM.ttf",
    "${CARGO_MAKE_WORKING_DIRECTORY}/assets/fonts/",
]
dependencies = ["prepare-directories-assets"]



[tasks.build]
command = "cargo"
args = ["build"]
dependencies = ["prepare-to-build"]

[tasks.run]
run_task = { name = ["prepare-to-run", "run-exe", "post-run"] }

[tasks.prepare-to-run]
command = "cp"
args = ["${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/target/x86_64-pc-windows-msvc/debug/suika_clone.exe", "${CARGO_MAKE_WORKING_DIRECTORY}/"]
dependencies = ["build"]

[tasks.run-exe]
command = "${CARGO_MAKE_WORKING_DIRECTORY}/suika_clone.exe"

[tasks.post-run]
command = "rm"
args = ["${CARGO_MAKE_WORKING_DIRECTORY}/suika_clone.exe"]



[tasks.build-web]
command = "cargo"
args = ["build", "--target", "wasm32-unknown-unknown"]
dependencies = ["prepare-to-build"]

[tasks.run-web]
command = "cargo"
args = ["run", "--target", "wasm32-unknown-unknown"]
dependencies = ["build-web"]



[tasks.build-release-web]
command = "cargo"
args = ["build", "--release", "--target", "wasm32-unknown-unknown"]
dependencies = ["prepare-to-build"]

[tasks.wasm-bindgen]
command = "wasm-bindgen"
args = [
    "--no-typescript",
    "--target", "web",
    "--out-dir", "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/out/",
    "--out-name", "suika_clone",
    "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/target/wasm32-unknown-unknown/release/suika_clone.wasm",
]
install_crate = "wasm-bindgen-cli"
dependencies = ["build-release-web"]

[tasks.copy-assets-for-web]
command = "cp"
args = [
    "-r",
    "${CARGO_MAKE_WORKING_DIRECTORY}/assets",
    "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/out/",
]

[tasks.copy-web-src]
command = "cp"
args = [
    "${CARGO_MAKE_WORKING_DIRECTORY}/web-src/index.html",

    "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/out/",
]


[tasks.release-web]
run_task = { name = ["build-release-web", "wasm-bindgen", "copy-assets-for-web", "copy-web-src"] }

